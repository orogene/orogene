name: CI

on: [push, pull_request]

env:
  RUSTFLAGS: -Dwarnings

jobs:
  fmt_and_docs:
    name: Check fmt & build docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true
      - name: rustfmt
        run: cargo fmt --all -- --check
      - name: docs
        run: cargo doc --no-deps

  build_and_test:
    name: Build & Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [stable]
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
      - uses: actions/checkout@v1
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          components: clippy
          override: true
      - name: Clippy
        run: cargo clippy --all -- -D warnings
      - name: Run tests
        run: cargo test --all --verbose

  # TODO: Re-enable someday. For now, mio is making this test fail, and it's
  # not even mio's fault.
  #
  # miri:
  #   name: Miri
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Install Rust
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: nightly
  #         components: miri,rust-src
  #         override: true
  #     - name: Run tests with miri
  #       env:
  #         MIRIFLAGS: -Zmiri-disable-isolation -Zmiri-strict-provenance
  #       run: cargo miri test --all --verbose

  # TODO: Re-enable when we're ready to start releasing crates. It doesn't
  # matter for orogene itself, but sub-crates *should* have this check done.
  #
  # minimal_versions: name: Minimal versions check runs-on: ${{ matrix.os }}
  #   strategy: matrix: os: [ubuntu-latest, macOS-latest, windows-latest]

  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Install Rust
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: nightly
  #         override: true
  #     - name: Run minimal version build
  #       run: cargo build -Z minimal-versions --all-features
